{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { checkSession } from \"./authService\"; // Function to validate session\n\nconst EXCLUDED_PAGES = [\"/\", \"/login\", \"/change-password\", \"/forgot-password\", \"/reset-password\"];\nconst SessionChecker = ({\n  children\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const validateSession = async () => {\n      if (EXCLUDED_PAGES.includes(location.pathname)) {\n        return;\n      }\n      const isValidSession = await checkSession(); // Function to validate session from backend/local storage\n      alert(isValidSession);\n      if (!isValidSession) {\n        navigate(\"/\"); // Redirect to login if session is invalid\n      }\n    };\n    validateSession();\n  }, [location.pathname, navigate]);\n  return children;\n};\n_s(SessionChecker, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SessionChecker;\nexport default SessionChecker;\nvar _c;\n$RefreshReg$(_c, \"SessionChecker\");","map":{"version":3,"names":["useEffect","useNavigate","useLocation","checkSession","EXCLUDED_PAGES","SessionChecker","children","_s","navigate","location","validateSession","includes","pathname","isValidSession","alert","_c","$RefreshReg$"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/SessionChecker.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { checkSession } from \"./authService\"; // Function to validate session\n\nconst EXCLUDED_PAGES = [\"/\",\"/login\",\"/change-password\",\"/forgot-password\",\"/reset-password\"];\n\n\n\nconst SessionChecker = ({ children }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const validateSession = async () => {\n      \n        if (EXCLUDED_PAGES.includes(location.pathname)) {\n            return;\n        }\n      const isValidSession = await checkSession(); // Function to validate session from backend/local storage\n        alert(isValidSession);\n      if (!isValidSession) {\n        navigate(\"/\"); // Redirect to login if session is invalid\n      }\n    };\n\n    validateSession();\n  }, [location.pathname, navigate]);\n\n  return children;\n};\n\nexport default SessionChecker;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,YAAY,QAAQ,eAAe,CAAC,CAAC;;AAE9C,MAAMC,cAAc,GAAG,CAAC,GAAG,EAAC,QAAQ,EAAC,kBAAkB,EAAC,kBAAkB,EAAC,iBAAiB,CAAC;AAI7F,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAEhC,IAAIN,cAAc,CAACO,QAAQ,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAE;QAC5C;MACJ;MACF,MAAMC,cAAc,GAAG,MAAMV,YAAY,CAAC,CAAC,CAAC,CAAC;MAC3CW,KAAK,CAACD,cAAc,CAAC;MACvB,IAAI,CAACA,cAAc,EAAE;QACnBL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC;IAEDE,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACD,QAAQ,CAACG,QAAQ,EAAEJ,QAAQ,CAAC,CAAC;EAEjC,OAAOF,QAAQ;AACjB,CAAC;AAACC,EAAA,CArBIF,cAAc;EAAA,QACDJ,WAAW,EACXC,WAAW;AAAA;AAAAa,EAAA,GAFxBV,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}