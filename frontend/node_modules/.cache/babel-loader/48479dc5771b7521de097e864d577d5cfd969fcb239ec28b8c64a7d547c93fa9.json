{"ast":null,"code":"const API_BASE_URL = \"http://127.0.0.1:5000/api\";\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  return response.json();\n};\nexport const fetchQuestions = async (category, token) => {\n  const response = await fetch(`${API_BASE_URL}/questions?category=${category}`, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n  return response.json();\n};\nexport const submitResponse = async (questionId, selectedOption, weightage, token) => {\n  const response = await fetch(`${API_BASE_URL}/submit`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      question_id: questionId,\n      selected_option: selectedOption,\n      weightage\n    })\n  });\n  return response.json();\n};\nexport const changePassword = async (user_id, new_password) => {\n  const response = await fetch(`${API_BASE_URL}/change_password`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      user_id,\n      new_password\n    })\n  });\n  return response.json();\n};\nexport const requestPasswordReset = async email => {\n  const response = await fetch(`${API_BASE_URL}/forgot_password`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email\n    })\n  });\n  return response.json();\n};\nexport const resetPassword = async (token, newPassword) => {\n  const response = await fetch(`${API_BASE_URL}/reset_password`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      token,\n      new_password: newPassword\n    })\n  });\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","loginUser","email","password","response","fetch","method","headers","body","JSON","stringify","json","fetchQuestions","category","token","submitResponse","questionId","selectedOption","weightage","question_id","selected_option","changePassword","user_id","new_password","requestPasswordReset","resetPassword","newPassword"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = \"http://127.0.0.1:5000/api\";\n\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/login`, {\n    method: \"POST\",\n    headers: { \n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    },\n    body: JSON.stringify({ email, password })\n  });\n  return response.json();\n};\n\nexport const fetchQuestions = async (category, token) => {\n  const response = await fetch(`${API_BASE_URL}/questions?category=${category}`, {\n    method: \"GET\",\n    headers: { \"Authorization\": `Bearer ${token}` }\n  });\n  return response.json();\n};\n\nexport const submitResponse = async (questionId, selectedOption, weightage, token) => {\n  const response = await fetch(`${API_BASE_URL}/submit`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${token}` },\n    body: JSON.stringify({ question_id: questionId, selected_option: selectedOption, weightage })\n  });\n  return response.json();\n};\n\nexport const changePassword = async (user_id, new_password) => {\n  const response = await fetch(`${API_BASE_URL}/change_password`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ user_id, new_password })\n  });\n  return response.json();\n};\n\nexport const requestPasswordReset = async (email) => {\n  const response = await fetch(`${API_BASE_URL}/forgot_password`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ email }),\n  });\n  return response.json();\n};\n\nexport const resetPassword = async (token, newPassword) => {\n  const response = await fetch(`${API_BASE_URL}/reset_password`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ token, new_password: newPassword }),\n  });\n  return response.json();\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,QAAQ,EAAE;IACpDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE;IACd,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,KAAK;EACvD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,uBAAuBa,QAAQ,EAAE,EAAE;IAC7EP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EACF,OAAOV,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAOC,UAAU,EAAEC,cAAc,EAAEC,SAAS,EAAEJ,KAAK,KAAK;EACpF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,SAAS,EAAE;IACrDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG,CAAC;IACnFN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAES,WAAW,EAAEH,UAAU;MAAEI,eAAe,EAAEH,cAAc;MAAEC;IAAU,CAAC;EAC9F,CAAC,CAAC;EACF,OAAOd,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMU,cAAc,GAAG,MAAAA,CAAOC,OAAO,EAAEC,YAAY,KAAK;EAC7D,MAAMnB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,kBAAkB,EAAE;IAC9DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEY,OAAO;MAAEC;IAAa,CAAC;EAChD,CAAC,CAAC;EACF,OAAOnB,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMa,oBAAoB,GAAG,MAAOtB,KAAK,IAAK;EACnD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,kBAAkB,EAAE;IAC9DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER;IAAM,CAAC;EAChC,CAAC,CAAC;EACF,OAAOE,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMc,aAAa,GAAG,MAAAA,CAAOX,KAAK,EAAEY,WAAW,KAAK;EACzD,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,iBAAiB,EAAE;IAC7DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEI,KAAK;MAAES,YAAY,EAAEG;IAAY,CAAC;EAC3D,CAAC,CAAC;EACF,OAAOtB,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}