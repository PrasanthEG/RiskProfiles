{"ast":null,"code":"var _jsxFileName = \"/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/components/QuestionsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport AddQuestionModal from \"./AddQuestionModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst QuestionsTable = () => {\n  _s();\n  const current_user_type = localStorage.getItem(\"user_type\");\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [questionText, setQuestionText] = useState(\"\");\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [answerText, setAnswerText] = useState(\"\");\n  const [answerOption, setAnswerOption] = useState(\"\");\n  const [newselectedCategory, setnewSelectedCategory] = useState(\"\");\n  const [flag_select, setFlag] = useState(true);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (selectedCategory) fetchQuestions(selectedCategory);\n  }, [selectedCategory]);\n  useEffect(() => {\n    if (!isOpen) {\n      console.log(\"Resetting modal values...\");\n      setQuestionText(\"\");\n      setNewCategoryId(\"\");\n      setAnswers([\"\", \"\", \"\", \"\"]);\n      setSelectedScores([\"\", \"\", \"\", \"\"]);\n    }\n  }, [isOpen]);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/categories\");\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n  const fetchQuestions = async categoryId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/questions?category_id=${categoryId}&limit=0`);\n      const resp_data = await response.json();\n      setQuestions(resp_data[\"data\"]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  const handleAddOrEditQuestion = async e => {\n    e.preventDefault();\n    const url = `http://127.0.0.1:5000/api/edit_questions/${editingQuestion.id}`;\n    const method = \"POST\";\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: questionText,\n          category_id: selectedCategory,\n          new_category_id: newselectedCategory\n        })\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n  const handleAddOrEditAnswer = async e => {\n    e.preventDefault();\n    const url = `http://127.0.0.1:5000/api/edit_answers/${editingQuestion.id}`;\n    const method = \"POST\";\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: answerText,\n          category_id: selectedCategory,\n          option: answerOption\n        })\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n  const handleEdit = question => {\n    setFlag(true);\n    setEditingQuestion(question);\n    setQuestionText(question.question_text);\n    setnewSelectedCategory(selectedCategory);\n    setIsModalOpen(true);\n  };\n  const handleEditAnswer = (question, answer) => {\n    setFlag(false);\n    setEditingQuestion(question);\n    setAnswerText(answer.text);\n    setAnswerOption(answer.option);\n    setIsModalOpen(true);\n  };\n  const handleDisable = async question => {\n    try {\n      const newStatus = question.status === \"active\" || question.status === \"ACTIVE\" ? \"inactive\" : \"active\";\n      const questionId = question.id;\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.log(\"TOKEN failed\");\n        return;\n      }\n      const response = await fetch(`http://127.0.0.1:5000/api/edit_questions/${questionId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          status: newStatus\n        })\n      });\n      fetchQuestions(selectedCategory);\n    } catch (error) {\n      console.error(\"Error disabling question:\", error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setQuestionText(\"\");\n    setEditingQuestion(null);\n    setFlag(true);\n    setnewSelectedCategory(\"\");\n    setAnswerText(\"\");\n    setAnswerOption(\"\");\n  };\n  const addCloseModal = () => {\n    alert(\"ok\");\n    setQuestionText(\"\");\n    setNewCategoryId(\"\");\n    setAnswers([\"\", \"\", \"\", \"\"]); // Reset answers array\n    setSelectedScores([\"\", \"\", \"\", \"\"]); // Reset selected risk scores\n    setIsAddModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" SELECT A CATEGORY: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCategory,\n      onChange: e => setSelectedCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.id,\n        children: cat.name\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAddModalOpen(true),\n      disabled: !selectedCategory || current_user_type === \"MEMBER\",\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"questions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: question.question_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(question),\n                disabled: question.status === \"inactive\" || current_user_type === \"MEMBER\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `${question.status == \"active\" ? \"disable-btn\" : \"enable-btn\"}`,\n                onClick: () => handleDisable(question),\n                disabled: current_user_type === \"MEMBER\",\n                children: question.status == \"active\" ? \"Disable\" : \"Enable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), question.options.map(answer => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"answer-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", answer.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-button\",\n                onClick: () => handleEditAnswer(question, answer),\n                disabled: question.status === \"inactive\" || current_user_type === \"MEMBER\",\n                style: {\n                  opacity: question.status === \"inactive\" ? 0.5 : 1,\n                  cursor: question.status === \"inactive\" ? \"not-allowed\" : \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/icons/edit.png\",\n                  alt: \"Edit\",\n                  className: \"icon-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)]\n          }, `${question.id}:${answer.score}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: [flag_select && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\\"Edit Question\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddOrEditQuestion,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: questionText,\n            onChange: e => setQuestionText(e.target.value),\n            required: true,\n            className: \"input-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newselectedCategory,\n            onChange: e => setnewSelectedCategory(e.target.value),\n            className: \"input-style\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 21\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), !flag_select && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\\"Edit Answer\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddOrEditAnswer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: answerText,\n            onChange: e => setAnswerText(e.target.value),\n            required: true,\n            className: \"input-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 148\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuestionModal, {\n      isOpen: isAddModalOpen,\n      addCloseModal: () => setIsAddModalOpen(false),\n      categories: categories,\n      selectedCategory: selectedCategory,\n      refreshQuestions: fetchQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsTable, \"suSneznaErbWvDveLkNaNwkgnaA=\");\n_c = QuestionsTable;\nexport default QuestionsTable;\nvar _c;\n$RefreshReg$(_c, \"QuestionsTable\");","map":{"version":3,"names":["React","useState","useEffect","Modal","AddQuestionModal","jsxDEV","_jsxDEV","setAppElement","QuestionsTable","_s","current_user_type","localStorage","getItem","categories","setCategories","selectedCategory","setSelectedCategory","questions","setQuestions","isModalOpen","setIsModalOpen","questionText","setQuestionText","editingQuestion","setEditingQuestion","answerText","setAnswerText","answerOption","setAnswerOption","newselectedCategory","setnewSelectedCategory","flag_select","setFlag","isAddModalOpen","setIsAddModalOpen","fetchCategories","fetchQuestions","isOpen","console","log","setNewCategoryId","setAnswers","setSelectedScores","response","fetch","data","json","error","categoryId","resp_data","handleAddOrEditQuestion","e","preventDefault","url","id","method","headers","body","JSON","stringify","text","category_id","new_category_id","ok","closeModal","handleAddOrEditAnswer","option","handleEdit","question","question_text","handleEditAnswer","answer","handleDisable","newStatus","status","questionId","token","addCloseModal","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","map","cat","name","onClick","disabled","className","Fragment","options","score","style","opacity","cursor","src","alt","onRequestClose","overlayClassName","onSubmit","rows","cols","required","type","refreshQuestions","_c","$RefreshReg$"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/components/QuestionsTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport AddQuestionModal from \"./AddQuestionModal\";\n\nModal.setAppElement(\"#root\");\n\nconst QuestionsTable = () => {\n  const current_user_type = localStorage.getItem(\"user_type\");\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [questionText, setQuestionText] = useState(\"\");\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [answerText, setAnswerText] = useState(\"\");\n  const [answerOption, setAnswerOption] = useState(\"\");\n  const [newselectedCategory, setnewSelectedCategory] = useState(\"\");\n  const [flag_select, setFlag] = useState(true);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false); \n  \n  \n  \n  \n  \n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCategory) fetchQuestions(selectedCategory);\n  }, [selectedCategory]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      console.log(\"Resetting modal values...\");\n      setQuestionText(\"\");\n      setNewCategoryId(\"\");\n      setAnswers([\"\", \"\", \"\", \"\"]);\n      setSelectedScores([\"\", \"\", \"\", \"\"]);\n    }\n  }, [isOpen]);\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/categories\");\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n\n  const fetchQuestions = async (categoryId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/questions?category_id=${categoryId}&limit=0`);\n      const resp_data = await response.json();\n      \n      setQuestions(resp_data[\"data\"]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n\n  const handleAddOrEditQuestion = async (e) => {\n    e.preventDefault();\n    const url = `http://127.0.0.1:5000/api/edit_questions/${editingQuestion.id}`\n     \n    const method =  \"POST\";\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({text: questionText, category_id: selectedCategory , new_category_id: newselectedCategory  }),\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n\n  const handleAddOrEditAnswer = async (e) => {\n    e.preventDefault();\n    const url = `http://127.0.0.1:5000/api/edit_answers/${editingQuestion.id}`;\n    const method =  \"POST\";\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({text: answerText, category_id: selectedCategory, option: answerOption }),\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n\n  const handleEdit = (question) => {\n    \n    setFlag(true);\n    setEditingQuestion(question);\n    setQuestionText(question.question_text);\n    setnewSelectedCategory(selectedCategory);\n    setIsModalOpen(true);\n  };\n\n  const handleEditAnswer= (question,answer) => {\n    setFlag(false);\n    setEditingQuestion(question);\n    setAnswerText(answer.text);\n    setAnswerOption(answer.option);\n    setIsModalOpen(true);\n  };\n\n  const handleDisable = async (question) => {\n    try {\n      const newStatus = (question.status === \"active\" || question.status === \"ACTIVE\") ? \"inactive\" : \"active\";\n      const questionId=question.id;\n      const token = localStorage.getItem(\"token\");\n        if (!token) {\n          console.log(\"TOKEN failed\");\n          return;\n        }\n  \n      const response = await fetch(`http://127.0.0.1:5000/api/edit_questions/${questionId}`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({ status: newStatus })\n      });\n      fetchQuestions(selectedCategory);\n    } catch (error) {\n      console.error(\"Error disabling question:\", error);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setQuestionText(\"\");\n    setEditingQuestion(null);\n    setFlag(true);\n    setnewSelectedCategory(\"\");\n    setAnswerText(\"\");\n    setAnswerOption(\"\");\n  };\n  const addCloseModal = () => {\n    alert(\"ok\");\n    setQuestionText(\"\");\n    setNewCategoryId(\"\");\n    setAnswers([\"\", \"\", \"\", \"\"]);  // Reset answers array\n    setSelectedScores([\"\", \"\", \"\", \"\"]);  // Reset selected risk scores\n    setIsAddModalOpen(false);\n    \n  };\n\n  return (\n    <div>\n      <h1>Manage Questions</h1>\n      <label> <strong> SELECT A CATEGORY: </strong> </label>\n      <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n        <option value=\"\">Select Category</option>\n        {categories.map((cat) => (\n          <option key={cat.id} value={cat.id}>{cat.name}</option>\n        ))}\n      </select>\n\n      <button onClick={() => setIsAddModalOpen(true)} disabled={!selectedCategory || current_user_type === \"MEMBER\"}>\n        Add Question\n      </button>\n\n\n      <table className=\"questions-table\">\n            <thead>\n                <tr>\n                    <th>Question</th>\n                    <th></th>\n                    <th></th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {questions.map((question) => (\n                    <React.Fragment key={question.id}>\n                        <tr>\n                            <td><strong>{question.question_text}</strong></td>\n                            <td> </td>\n                            <td> </td>\n                            <td>\n                                <button  onClick={() => handleEdit(question)} disabled={ question.status===\"inactive\" || current_user_type === \"MEMBER\"}>Edit</button>\n                                <button  className={`${question.status == \"active\" ? \"disable-btn\" : \"enable-btn\"}`}  onClick={() => handleDisable(question)} disabled={current_user_type === \"MEMBER\"}>\n                                   \n                                    {question.status == \"active\" ? \"Disable\" : \"Enable\"} \n                                </button>\n                            </td>\n                        </tr>\n                        {question.options.map((answer) => (\n                            <tr key={`${question.id}:${answer.score}`} className=\"answer-row\">\n                                <td>{answer.text}</td>\n                                <td> {answer.score}</td>\n                                <td>\n                                    \n\n                                    <button\n                                        className=\"icon-button\"\n                                        onClick={() => handleEditAnswer(question,answer)}\n                                        disabled={ question.status===\"inactive\" || current_user_type === \"MEMBER\"}\n                                        style={{ opacity: question.status === \"inactive\" ? 0.5 : 1, cursor: question.status === \"inactive\" ? \"not-allowed\" : \"pointer\" }}\n                                      >\n                                        <img src=\"/icons/edit.png\" alt=\"Edit\" className=\"icon-img\" />\n                                      </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </React.Fragment>\n                ))}\n            </tbody>\n        </table>\n\n\n      <Modal isOpen={isModalOpen} onRequestClose={closeModal} className=\"modal-content\" overlayClassName=\"modal-overlay\">\n       \n        {flag_select && (\n          <div>\n           <h2>\"Edit Question\" </h2>\n             <form onSubmit={handleAddOrEditQuestion}>\n                <label>Question:</label>\n               \n                <textarea rows=\"4\" cols=\"50\" value={questionText} onChange={(e) => setQuestionText(e.target.value)} required className=\"input-style\"/>\n                <label>Category:</label>\n                  <select value={newselectedCategory} onChange={(e) => setnewSelectedCategory(e.target.value)} className=\"input-style\">\n                    <option value=\"\">Select Category</option>\n                    {categories.map((cat) => (\n                      <option key={cat.id} value={cat.id}>{cat.name}</option>\n                    ))}\n                  </select>  \n                  <br/>\n\n                <div>\n                  <button type=\"button\" onClick={closeModal}>Cancel</button>\n                  <button type=\"submit\">Save</button>\n                </div>\n              </form>\n            </div>\n        )}\n        {!flag_select && (\n          <div>\n           <h2>\"Edit Answer\" </h2>\n             <form onSubmit={handleAddOrEditAnswer}>\n                <label>Answer:</label>\n                <textarea rows=\"4\" cols=\"50\" value={answerText} onChange={(e) => setAnswerText(e.target.value)} required className=\"input-style\"/> <br/>\n                <div>\n                  <button type=\"button\" onClick={closeModal}>Cancel</button>\n                  <button type=\"submit\">Save</button>\n                </div>\n              </form>\n            </div>\n        )}\n\n      </Modal>\n\n      <AddQuestionModal\n        isOpen={isAddModalOpen}\n        addCloseModal={() => setIsAddModalOpen(false)}\n        categories={categories}\n        selectedCategory={selectedCategory}\n        refreshQuestions={fetchQuestions}\n      />\n      \n    </div>\n\n\n  );\n};\n\nexport default QuestionsTable;\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElDH,KAAK,CAACI,aAAa,CAAC,OAAO,CAAC;AAE5B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC3D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC8B,WAAW,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAO3DC,SAAS,CAAC,MAAM;IACdiC,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACd,IAAIa,gBAAgB,EAAEqB,cAAc,CAACrB,gBAAgB,CAAC;EACxD,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtBb,SAAS,CAAC,MAAM;IACd,IAAI,CAACmC,MAAM,EAAE;MACXC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCjB,eAAe,CAAC,EAAE,CAAC;MACnBkB,gBAAgB,CAAC,EAAE,CAAC;MACpBC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;MAC5BC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACrC;EACF,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,MAAMF,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClChC,aAAa,CAAC+B,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMX,cAAc,GAAG,MAAOY,UAAU,IAAK;IAC3C,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDI,UAAU,UAAU,CAAC;MACrG,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEvC5B,YAAY,CAAC+B,SAAS,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMG,uBAAuB,GAAG,MAAOC,CAAC,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,4CAA4C9B,eAAe,CAAC+B,EAAE,EAAE;IAE5E,MAAMC,MAAM,GAAI,MAAM;IAEtB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACS,GAAG,EAAE;QAChCE,MAAM;QACNC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAEvC,YAAY;UAAEwC,WAAW,EAAE9C,gBAAgB;UAAG+C,eAAe,EAAEjC;QAAqB,CAAC;MACnH,CAAC,CAAC;MACF,IAAIc,QAAQ,CAACoB,EAAE,EAAE;QACf3B,cAAc,CAACrB,gBAAgB,CAAC;QAChCiD,UAAU,CAAC,CAAC;MACd;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMkB,qBAAqB,GAAG,MAAOd,CAAC,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,0CAA0C9B,eAAe,CAAC+B,EAAE,EAAE;IAC1E,MAAMC,MAAM,GAAI,MAAM;IAEtB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACS,GAAG,EAAE;QAChCE,MAAM;QACNC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAEnC,UAAU;UAAEoC,WAAW,EAAE9C,gBAAgB;UAAEmD,MAAM,EAAEvC;QAAa,CAAC;MAC/F,CAAC,CAAC;MACF,IAAIgB,QAAQ,CAACoB,EAAE,EAAE;QACf3B,cAAc,CAACrB,gBAAgB,CAAC;QAChCiD,UAAU,CAAC,CAAC;MACd;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMoB,UAAU,GAAIC,QAAQ,IAAK;IAE/BpC,OAAO,CAAC,IAAI,CAAC;IACbR,kBAAkB,CAAC4C,QAAQ,CAAC;IAC5B9C,eAAe,CAAC8C,QAAQ,CAACC,aAAa,CAAC;IACvCvC,sBAAsB,CAACf,gBAAgB,CAAC;IACxCK,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMkD,gBAAgB,GAAEA,CAACF,QAAQ,EAACG,MAAM,KAAK;IAC3CvC,OAAO,CAAC,KAAK,CAAC;IACdR,kBAAkB,CAAC4C,QAAQ,CAAC;IAC5B1C,aAAa,CAAC6C,MAAM,CAACX,IAAI,CAAC;IAC1BhC,eAAe,CAAC2C,MAAM,CAACL,MAAM,CAAC;IAC9B9C,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMoD,aAAa,GAAG,MAAOJ,QAAQ,IAAK;IACxC,IAAI;MACF,MAAMK,SAAS,GAAIL,QAAQ,CAACM,MAAM,KAAK,QAAQ,IAAIN,QAAQ,CAACM,MAAM,KAAK,QAAQ,GAAI,UAAU,GAAG,QAAQ;MACxG,MAAMC,UAAU,GAACP,QAAQ,CAACd,EAAE;MAC5B,MAAMsB,KAAK,GAAGjE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACzC,IAAI,CAACgE,KAAK,EAAE;QACVtC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B;MACF;MAEF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C+B,UAAU,EAAE,EAAE;QACrFpB,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUoB,KAAK;QAClC,CAAC;QACDnB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEe,MAAM,EAAED;QAAU,CAAC;MAC5C,CAAC,CAAC;MACFrC,cAAc,CAACrB,gBAAgB,CAAC;IAClC,CAAC,CAAC,OAAOgC,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvB5C,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,EAAE,CAAC;IACnBE,kBAAkB,CAAC,IAAI,CAAC;IACxBQ,OAAO,CAAC,IAAI,CAAC;IACbF,sBAAsB,CAAC,EAAE,CAAC;IAC1BJ,aAAa,CAAC,EAAE,CAAC;IACjBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EACD,MAAMiD,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAAC,IAAI,CAAC;IACXxD,eAAe,CAAC,EAAE,CAAC;IACnBkB,gBAAgB,CAAC,EAAE,CAAC;IACpBC,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAE;IAC/BC,iBAAiB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAE;IACtCR,iBAAiB,CAAC,KAAK,CAAC;EAE1B,CAAC;EAED,oBACE5B,OAAA;IAAAyE,QAAA,gBACEzE,OAAA;MAAAyE,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB7E,OAAA;MAAAyE,QAAA,GAAO,GAAC,eAAAzE,OAAA;QAAAyE,QAAA,EAAQ;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACtD7E,OAAA;MAAQ8E,KAAK,EAAErE,gBAAiB;MAACsE,QAAQ,EAAGlC,CAAC,IAAKnC,mBAAmB,CAACmC,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;MAAAL,QAAA,gBACpFzE,OAAA;QAAQ8E,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCtE,UAAU,CAAC0E,GAAG,CAAEC,GAAG,iBAClBlF,OAAA;QAAqB8E,KAAK,EAAEI,GAAG,CAAClC,EAAG;QAAAyB,QAAA,EAAES,GAAG,CAACC;MAAI,GAAhCD,GAAG,CAAClC,EAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAET7E,OAAA;MAAQoF,OAAO,EAAEA,CAAA,KAAMxD,iBAAiB,CAAC,IAAI,CAAE;MAACyD,QAAQ,EAAE,CAAC5E,gBAAgB,IAAIL,iBAAiB,KAAK,QAAS;MAAAqE,QAAA,EAAC;IAE/G;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGT7E,OAAA;MAAOsF,SAAS,EAAC,iBAAiB;MAAAb,QAAA,gBAC5BzE,OAAA;QAAAyE,QAAA,eACIzE,OAAA;UAAAyE,QAAA,gBACIzE,OAAA;YAAAyE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB7E,OAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7E,OAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT7E,OAAA;YAAAyE,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACR7E,OAAA;QAAAyE,QAAA,EACK9D,SAAS,CAACsE,GAAG,CAAEnB,QAAQ,iBACpB9D,OAAA,CAACN,KAAK,CAAC6F,QAAQ;UAAAd,QAAA,gBACXzE,OAAA;YAAAyE,QAAA,gBACIzE,OAAA;cAAAyE,QAAA,eAAIzE,OAAA;gBAAAyE,QAAA,EAASX,QAAQ,CAACC;cAAa;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClD7E,OAAA;cAAAyE,QAAA,EAAI;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACV7E,OAAA;cAAAyE,QAAA,EAAI;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACV7E,OAAA;cAAAyE,QAAA,gBACIzE,OAAA;gBAASoF,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACC,QAAQ,CAAE;gBAACuB,QAAQ,EAAGvB,QAAQ,CAACM,MAAM,KAAG,UAAU,IAAIhE,iBAAiB,KAAK,QAAS;gBAAAqE,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtI7E,OAAA;gBAASsF,SAAS,EAAE,GAAGxB,QAAQ,CAACM,MAAM,IAAI,QAAQ,GAAG,aAAa,GAAG,YAAY,EAAG;gBAAEgB,OAAO,EAAEA,CAAA,KAAMlB,aAAa,CAACJ,QAAQ,CAAE;gBAACuB,QAAQ,EAAEjF,iBAAiB,KAAK,QAAS;gBAAAqE,QAAA,EAElKX,QAAQ,CAACM,MAAM,IAAI,QAAQ,GAAG,SAAS,GAAG;cAAQ;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EACJf,QAAQ,CAAC0B,OAAO,CAACP,GAAG,CAAEhB,MAAM,iBACzBjE,OAAA;YAA2CsF,SAAS,EAAC,YAAY;YAAAb,QAAA,gBAC7DzE,OAAA;cAAAyE,QAAA,EAAKR,MAAM,CAACX;YAAI;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtB7E,OAAA;cAAAyE,QAAA,GAAI,GAAC,EAACR,MAAM,CAACwB,KAAK;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxB7E,OAAA;cAAAyE,QAAA,eAGIzE,OAAA;gBACIsF,SAAS,EAAC,aAAa;gBACvBF,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACF,QAAQ,EAACG,MAAM,CAAE;gBACjDoB,QAAQ,EAAGvB,QAAQ,CAACM,MAAM,KAAG,UAAU,IAAIhE,iBAAiB,KAAK,QAAS;gBAC1EsF,KAAK,EAAE;kBAAEC,OAAO,EAAE7B,QAAQ,CAACM,MAAM,KAAK,UAAU,GAAG,GAAG,GAAG,CAAC;kBAAEwB,MAAM,EAAE9B,QAAQ,CAACM,MAAM,KAAK,UAAU,GAAG,aAAa,GAAG;gBAAU,CAAE;gBAAAK,QAAA,eAEjIzE,OAAA;kBAAK6F,GAAG,EAAC,iBAAiB;kBAACC,GAAG,EAAC,MAAM;kBAACR,SAAS,EAAC;gBAAU;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA,GAdA,GAAGf,QAAQ,CAACd,EAAE,IAAIiB,MAAM,CAACwB,KAAK,EAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAerC,CACP,CAAC;QAAA,GA9Bef,QAAQ,CAACd,EAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+BhB,CACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGV7E,OAAA,CAACH,KAAK;MAACkC,MAAM,EAAElB,WAAY;MAACkF,cAAc,EAAErC,UAAW;MAAC4B,SAAS,EAAC,eAAe;MAACU,gBAAgB,EAAC,eAAe;MAAAvB,QAAA,GAE/GhD,WAAW,iBACVzB,OAAA;QAAAyE,QAAA,gBACCzE,OAAA;UAAAyE,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvB7E,OAAA;UAAMiG,QAAQ,EAAErD,uBAAwB;UAAA6B,QAAA,gBACrCzE,OAAA;YAAAyE,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAExB7E,OAAA;YAAUkG,IAAI,EAAC,GAAG;YAACC,IAAI,EAAC,IAAI;YAACrB,KAAK,EAAE/D,YAAa;YAACgE,QAAQ,EAAGlC,CAAC,IAAK7B,eAAe,CAAC6B,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAACsB,QAAQ;YAACd,SAAS,EAAC;UAAa;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACtI7E,OAAA;YAAAyE,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtB7E,OAAA;YAAQ8E,KAAK,EAAEvD,mBAAoB;YAACwD,QAAQ,EAAGlC,CAAC,IAAKrB,sBAAsB,CAACqB,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAACQ,SAAS,EAAC,aAAa;YAAAb,QAAA,gBAClHzE,OAAA;cAAQ8E,KAAK,EAAC,EAAE;cAAAL,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxCtE,UAAU,CAAC0E,GAAG,CAAEC,GAAG,iBAClBlF,OAAA;cAAqB8E,KAAK,EAAEI,GAAG,CAAClC,EAAG;cAAAyB,QAAA,EAAES,GAAG,CAACC;YAAI,GAAhCD,GAAG,CAAClC,EAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmC,CACvD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACT7E,OAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEP7E,OAAA;YAAAyE,QAAA,gBACEzE,OAAA;cAAQqG,IAAI,EAAC,QAAQ;cAACjB,OAAO,EAAE1B,UAAW;cAAAe,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1D7E,OAAA;cAAQqG,IAAI,EAAC,QAAQ;cAAA5B,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR,EACA,CAACpD,WAAW,iBACXzB,OAAA;QAAAyE,QAAA,gBACCzE,OAAA;UAAAyE,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB7E,OAAA;UAAMiG,QAAQ,EAAEtC,qBAAsB;UAAAc,QAAA,gBACnCzE,OAAA;YAAAyE,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtB7E,OAAA;YAAUkG,IAAI,EAAC,GAAG;YAACC,IAAI,EAAC,IAAI;YAACrB,KAAK,EAAE3D,UAAW;YAAC4D,QAAQ,EAAGlC,CAAC,IAAKzB,aAAa,CAACyB,CAAC,CAACmC,MAAM,CAACF,KAAK,CAAE;YAACsB,QAAQ;YAACd,SAAS,EAAC;UAAa;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,KAAC,eAAA7E,OAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxI7E,OAAA;YAAAyE,QAAA,gBACEzE,OAAA;cAAQqG,IAAI,EAAC,QAAQ;cAACjB,OAAO,EAAE1B,UAAW;cAAAe,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1D7E,OAAA;cAAQqG,IAAI,EAAC,QAAQ;cAAA5B,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC,eAER7E,OAAA,CAACF,gBAAgB;MACfiC,MAAM,EAAEJ,cAAe;MACvB4C,aAAa,EAAEA,CAAA,KAAM3C,iBAAiB,CAAC,KAAK,CAAE;MAC9CrB,UAAU,EAAEA,UAAW;MACvBE,gBAAgB,EAAEA,gBAAiB;MACnC6F,gBAAgB,EAAExE;IAAe;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAIV,CAAC;AAAC1E,EAAA,CApRID,cAAc;AAAAqG,EAAA,GAAdrG,cAAc;AAsRpB,eAAeA,cAAc;AAAC,IAAAqG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}