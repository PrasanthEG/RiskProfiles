{"ast":null,"code":"var _jsxFileName = \"/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/components/SettingsMenu.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsMenu = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  // Toggle menu on button click\n  const toggleMenu = () => {\n    setIsOpen(prev => !prev);\n  };\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-menu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"menu-toggle-btn\",\n      onClick: () => setIsOpen(!isOpen),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/icons/settings.png\",\n        alt: \"User Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `user-menu ${isOpen ? \"active\" : \"\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsMenu, \"yIsVPXmGJnWJAXf4YKobPzEQ+oo=\");\n_c = SettingsMenu;\nexport default SettingsMenu;\nvar _c;\n$RefreshReg$(_c, \"SettingsMenu\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","SettingsMenu","_s","isOpen","setIsOpen","menuRef","toggleMenu","prev","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/components/SettingsMenu.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\n\nconst SettingsMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef(null);\n\n  // Toggle menu on button click\n  const toggleMenu = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  // Close menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"user-menu-container\">\n      <button className=\"menu-toggle-btn\" onClick={() => setIsOpen(!isOpen)}>\n        <img src=\"/icons/settings.png\" alt=\"User Menu\" />\n      </button>\n\n      <div className={`user-menu ${isOpen ? \"active\" : \"\"}`}>\n        <ul>\n          <li>Profile</li>\n          <li>Settings</li>\n          <li>Logout</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsMenu;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMS,OAAO,GAAGR,MAAM,CAAC,IAAI,CAAC;;EAE5B;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACvBF,SAAS,CAAEG,IAAI,IAAK,CAACA,IAAI,CAAC;EAC5B,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACd,MAAMU,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIJ,OAAO,CAACK,OAAO,IAAI,CAACL,OAAO,CAACK,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC9DR,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IAEDS,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKgB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCjB,OAAA;MAAQgB,SAAS,EAAC,iBAAiB;MAACE,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAc,QAAA,eACpEjB,OAAA;QAAKmB,GAAG,EAAC,qBAAqB;QAACC,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAETxB,OAAA;MAAKgB,SAAS,EAAE,aAAab,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;MAAAc,QAAA,eACpDjB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAI;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBxB,OAAA;UAAAiB,QAAA,EAAI;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBxB,OAAA;UAAAiB,QAAA,EAAI;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtCID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}