{"ast":null,"code":"export const checkSession = async () => {\n  try {\n    const response = await fetch(\"/api/check-session\", {\n      method: \"GET\",\n      credentials: \"include\" // Ensures cookies are sent with the request\n    });\n    if (!response.ok) {\n      throw new Error(\"Session validation failed\");\n    }\n    const data = await response.json();\n    return data.isValid; // Assuming API returns { isValid: true/false }\n  } catch (error) {\n    console.error(\"Session validation error:\", error);\n    return false; // Return false if validation fails\n  }\n};","map":{"version":3,"names":["checkSession","response","fetch","method","credentials","ok","Error","data","json","isValid","error","console"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/authService.js"],"sourcesContent":["export const checkSession = async () => {\n    try {\n      const response = await fetch(\"/api/check-session\", {\n        method: \"GET\",\n        credentials: \"include\", // Ensures cookies are sent with the request\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Session validation failed\");\n      }\n  \n      const data = await response.json();\n      return data.isValid; // Assuming API returns { isValid: true/false }\n    } catch (error) {\n      console.error(\"Session validation error:\", error);\n      return false; // Return false if validation fails\n    }\n  };\n  "],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAoB,EAAE;MACjDC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS,CAAE;IAC1B,CAAC,CAAC;IAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC;EACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,KAAK,CAAC,CAAC;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}