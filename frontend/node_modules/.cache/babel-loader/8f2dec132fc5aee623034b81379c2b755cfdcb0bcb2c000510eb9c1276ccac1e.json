{"ast":null,"code":"var _jsxFileName = \"/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/pages/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { resetPassword } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const query = new URLSearchParams(useLocation().search);\n  const token = query.get(\"token\");\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    const response = await resetPassword(token, newPassword);\n    if (response.status === \"SUCCESS\") {\n      navigate(\"/\");\n    } else {\n      setError(\"Failed to reset password. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPassword,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"rO05FWZnr4Q9vr8aslbVA75vBcM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","resetPassword","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","navigate","query","URLSearchParams","search","token","get","handleResetPassword","response","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/pages/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { resetPassword } from \"../services/api\";\n\nconst ResetPassword = () => {\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const query = new URLSearchParams(useLocation().search);\n  const token = query.get(\"token\");\n\n  const handleResetPassword = async () => {\n    if (newPassword !== confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    const response = await resetPassword(token, newPassword);\n\n    if (response.status === \"SUCCESS\") {\n      navigate(\"/\");\n    } else {\n      setError(\"Failed to reset password. Try again.\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n        <div className=\"login-box\">\n            <div>\n                <h2>Reset Password</h2>\n                {error && <p style={{ color: \"red\" }}>{error}</p>}\n                <input type=\"password\" placeholder=\"New Password\" onChange={(e) => setNewPassword(e.target.value)} />\n                <input type=\"password\" placeholder=\"Confirm Password\" onChange={(e) => setConfirmPassword(e.target.value)} />\n                <button onClick={handleResetPassword}>Submit</button>\n            </div>\n        </div>\n    </div>\n     \n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}