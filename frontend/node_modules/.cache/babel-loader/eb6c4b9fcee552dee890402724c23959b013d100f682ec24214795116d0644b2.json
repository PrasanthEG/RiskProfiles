{"ast":null,"code":"var _jsxFileName = \"/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/components/QuestionsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst QuestionsTable = () => {\n  _s();\n  const current_user_type = localStorage.getItem(\"user_type\");\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [questionText, setQuestionText] = useState(\"\");\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [answerText, setAnswerText] = useState(\"\");\n  const [answerOption, setAnswerOption] = useState(\"\");\n  const [newselectedCategory, setnewSelectedCategory] = useState(\"\");\n  const [flag_select, setFlag] = useState(true);\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  useEffect(() => {\n    if (selectedCategory) fetchQuestions(selectedCategory);\n  }, [selectedCategory]);\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/categories\");\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n  const fetchQuestions = async categoryId => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/questions?category_id=${categoryId}&limit=0`);\n      const resp_data = await response.json();\n      setQuestions(resp_data[\"data\"]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n  const handleAddOrEditQuestion = async e => {\n    e.preventDefault();\n    const url = editingQuestion ? `http://127.0.0.1:5000/api/questions/${editingQuestion.id}` : `http://127.0.0.1:5000/api/answers/${editingQuestion.id}`;\n    const method = \"POST\";\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: questionText,\n          category_id: selectedCategory\n        })\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n  const handleAddOrEditAnswer = async e => {\n    e.preventDefault();\n    const url = `http://127.0.0.1:5000/api/edit_answers/${editingQuestion.id}`;\n    const method = \"POST\";\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: answerText,\n          category_id: selectedCategory,\n          option: answerOption\n        })\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n  const handleEdit = question => {\n    setFlag(true);\n    setEditingQuestion(question);\n    setQuestionText(question.question_text);\n    setnewselectedCategory(selectedCategory);\n    setIsModalOpen(true);\n  };\n  const handleEditAnswer = (question, answer) => {\n    setFlag(false);\n    setEditingQuestion(question);\n    setAnswerText(answer.text);\n    setAnswerOption(answer.option);\n    setIsModalOpen(true);\n  };\n  const handleDisable = async questionId => {\n    try {\n      await fetch(`http://127.0.0.1:5000/api/questions/${questionId}`, {\n        method: \"DELETE\"\n      });\n      fetchQuestions(selectedCategory);\n    } catch (error) {\n      console.error(\"Error disabling question:\", error);\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setQuestionText(\"\");\n    setEditingQuestion(null);\n    setFlag(true);\n    setnewSelectedCategory(\"\");\n    setAnswerText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manage Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Category:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCategory,\n      onChange: e => setSelectedCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.id,\n        children: cat.name\n      }, cat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"questions-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: questions.map(question => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: question.question_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(question),\n                disabled: question.status === \"inactive\" || current_user_type === \"MEMBER\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDisable(question.id),\n                disabled: current_user_type === \"MEMBER\",\n                children: \"Disable\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), question.options.map(answer => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"answer-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: answer.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", answer.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon-button\",\n                onClick: () => handleEditAnswer(question, answer),\n                disabled: question.status === \"inactive\" || current_user_type === \"MEMBER\",\n                style: {\n                  opacity: question.status === \"inactive\" ? 0.5 : 1,\n                  cursor: question.status === \"inactive\" ? \"not-allowed\" : \"pointer\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/icons/edit.png\",\n                  alt: \"Edit\",\n                  className: \"icon-img\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, `${question.id}:${answer.score}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: [flag_select && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\\"Edit Question\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddOrEditQuestion,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Question:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: questionText,\n            onChange: e => setQuestionText(e.target.value),\n            required: true,\n            className: \"input-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: newselectedCategory,\n            onChange: e => setnewSelectedCategory(e.target.value),\n            className: \"input-style\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), !flag_select && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\\"Edit Answer\\\" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddOrEditAnswer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"4\",\n            cols: \"50\",\n            value: answerText,\n            onChange: e => setAnswerText(e.target.value),\n            required: true,\n            className: \"input-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 148\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: closeModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsTable, \"dgsh4X9qKppOWeJWnHGM4EVQpns=\");\n_c = QuestionsTable;\nexport default QuestionsTable;\nvar _c;\n$RefreshReg$(_c, \"QuestionsTable\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","setAppElement","QuestionsTable","_s","current_user_type","localStorage","getItem","categories","setCategories","selectedCategory","setSelectedCategory","questions","setQuestions","isModalOpen","setIsModalOpen","questionText","setQuestionText","editingQuestion","setEditingQuestion","answerText","setAnswerText","answerOption","setAnswerOption","newselectedCategory","setnewSelectedCategory","flag_select","setFlag","fetchCategories","fetchQuestions","response","fetch","data","json","error","console","categoryId","resp_data","handleAddOrEditQuestion","e","preventDefault","url","id","method","headers","body","JSON","stringify","text","category_id","ok","closeModal","handleAddOrEditAnswer","option","handleEdit","question","question_text","setnewselectedCategory","handleEditAnswer","answer","handleDisable","questionId","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","map","cat","name","className","Fragment","onClick","disabled","status","options","score","style","opacity","cursor","src","alt","isOpen","onRequestClose","overlayClassName","onSubmit","rows","cols","required","type","_c","$RefreshReg$"],"sources":["/Users/a91994/Desktop/Projects/RiskProfile/frontend/src/components/QuestionsTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement(\"#root\");\n\nconst QuestionsTable = () => {\n  const current_user_type = localStorage.getItem(\"user_type\");\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [questions, setQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [questionText, setQuestionText] = useState(\"\");\n  const [editingQuestion, setEditingQuestion] = useState(null);\n  const [answerText, setAnswerText] = useState(\"\");\n  const [answerOption, setAnswerOption] = useState(\"\");\n  const [newselectedCategory, setnewSelectedCategory] = useState(\"\");\n  const [flag_select, setFlag] = useState(true);\n  \n  \n  \n  \n  \n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n  useEffect(() => {\n    if (selectedCategory) fetchQuestions(selectedCategory);\n  }, [selectedCategory]);\n\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/api/categories\");\n      const data = await response.json();\n      setCategories(data);\n    } catch (error) {\n      console.error(\"Error fetching categories:\", error);\n    }\n  };\n\n  const fetchQuestions = async (categoryId) => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/api/questions?category_id=${categoryId}&limit=0`);\n      const resp_data = await response.json();\n      \n      setQuestions(resp_data[\"data\"]);\n    } catch (error) {\n      console.error(\"Error fetching questions:\", error);\n    }\n  };\n\n  const handleAddOrEditQuestion = async (e) => {\n    e.preventDefault();\n    const url = editingQuestion\n      ? `http://127.0.0.1:5000/api/questions/${editingQuestion.id}`\n      : `http://127.0.0.1:5000/api/answers/${editingQuestion.id}`;\n    const method =  \"POST\";\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({text: questionText, category_id: selectedCategory }),\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n\n  const handleAddOrEditAnswer = async (e) => {\n    e.preventDefault();\n    const url = `http://127.0.0.1:5000/api/edit_answers/${editingQuestion.id}`;\n    const method =  \"POST\";\n\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({text: answerText, category_id: selectedCategory, option: answerOption }),\n      });\n      if (response.ok) {\n        fetchQuestions(selectedCategory);\n        closeModal();\n      }\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n    }\n  };\n\n  const handleEdit = (question) => {\n    \n\n    setFlag(true);\n    setEditingQuestion(question);\n    setQuestionText(question.question_text);\n    setnewselectedCategory(selectedCategory);\n    setIsModalOpen(true);\n  };\n\n  const handleEditAnswer= (question,answer) => {\n    setFlag(false);\n    setEditingQuestion(question);\n    setAnswerText(answer.text);\n    setAnswerOption(answer.option);\n    setIsModalOpen(true);\n  };\n\n  const handleDisable = async (questionId) => {\n    try {\n      await fetch(`http://127.0.0.1:5000/api/questions/${questionId}`, { method: \"DELETE\" });\n      fetchQuestions(selectedCategory);\n    } catch (error) {\n      console.error(\"Error disabling question:\", error);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setQuestionText(\"\");\n    setEditingQuestion(null);\n    setFlag(true);\n    setnewSelectedCategory(\"\");\n    setAnswerText(\"\");\n  };\n\n  return (\n    <div>\n      <h1>Manage Questions</h1>\n      <label>Category:</label>\n      <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\n        <option value=\"\">Select Category</option>\n        {categories.map((cat) => (\n          <option key={cat.id} value={cat.id}>{cat.name}</option>\n        ))}\n      </select>\n      \n      <table className=\"questions-table\">\n            <thead>\n                <tr>\n                    <th>Question</th>\n                    <th></th>\n                    <th></th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {questions.map((question) => (\n                    <React.Fragment key={question.id}>\n                        <tr>\n                            <td><strong>{question.question_text}</strong></td>\n                            <td> </td>\n                            <td> </td>\n                            <td>\n                                <button onClick={() => handleEdit(question)} disabled={ question.status===\"inactive\" || current_user_type === \"MEMBER\"}>Edit</button>\n                                <button onClick={() => handleDisable(question.id)} disabled={current_user_type === \"MEMBER\"}>Disable</button>\n                            </td>\n                        </tr>\n                        {question.options.map((answer) => (\n                            <tr key={`${question.id}:${answer.score}`} className=\"answer-row\">\n                                <td>{answer.text}</td>\n                                <td> {answer.score}</td>\n                                <td>\n                                    \n\n                                    <button\n                                        className=\"icon-button\"\n                                        onClick={() => handleEditAnswer(question,answer)}\n                                        disabled={ question.status===\"inactive\" || current_user_type === \"MEMBER\"}\n                                        style={{ opacity: question.status === \"inactive\" ? 0.5 : 1, cursor: question.status === \"inactive\" ? \"not-allowed\" : \"pointer\" }}\n                                      >\n                                        <img src=\"/icons/edit.png\" alt=\"Edit\" className=\"icon-img\" />\n                                      </button>\n                                </td>\n                            </tr>\n                        ))}\n                    </React.Fragment>\n                ))}\n            </tbody>\n        </table>\n\n\n      <Modal isOpen={isModalOpen} onRequestClose={closeModal} className=\"modal-content\" overlayClassName=\"modal-overlay\">\n       \n        {flag_select && (\n          <div>\n           <h2>\"Edit Question\" </h2>\n             <form onSubmit={handleAddOrEditQuestion}>\n                <label>Question:</label>\n               \n                <textarea rows=\"4\" cols=\"50\" value={questionText} onChange={(e) => setQuestionText(e.target.value)} required className=\"input-style\"/>\n                <label>Category:</label>\n                  <select value={newselectedCategory} onChange={(e) => setnewSelectedCategory(e.target.value)} className=\"input-style\">\n                    <option value=\"\">Select Category</option>\n                    {categories.map((cat) => (\n                      <option key={cat.id} value={cat.id}>{cat.name}</option>\n                    ))}\n                  </select>  \n                  <br/>\n\n                <div>\n                  <button type=\"button\" onClick={closeModal}>Cancel</button>\n                  <button type=\"submit\">Save</button>\n                </div>\n              </form>\n            </div>\n        )}\n        {!flag_select && (\n          <div>\n           <h2>\"Edit Answer\" </h2>\n             <form onSubmit={handleAddOrEditAnswer}>\n                <label>Answer:</label>\n                <textarea rows=\"4\" cols=\"50\" value={answerText} onChange={(e) => setAnswerText(e.target.value)} required className=\"input-style\"/> <br/>\n                <div>\n                  <button type=\"button\" onClick={closeModal}>Cancel</button>\n                  <button type=\"submit\">Save</button>\n                </div>\n              </form>\n            </div>\n        )}\n\n      </Modal>\n    </div>\n  );\n};\n\nexport default QuestionsTable;\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhCF,KAAK,CAACG,aAAa,CAAC,OAAO,CAAC;AAE5B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC3D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC2B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAAC6B,WAAW,EAAEC,OAAO,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAO7CC,SAAS,CAAC,MAAM;IACd8B,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd,IAAIY,gBAAgB,EAAEmB,cAAc,CAACnB,gBAAgB,CAAC;EACxD,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MACpE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCxB,aAAa,CAACuB,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAML,cAAc,GAAG,MAAOO,UAAU,IAAK;IAC3C,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmDK,UAAU,UAAU,CAAC;MACrG,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEvCpB,YAAY,CAACwB,SAAS,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMI,uBAAuB,GAAG,MAAOC,CAAC,IAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAGvB,eAAe,GACvB,uCAAuCA,eAAe,CAACwB,EAAE,EAAE,GAC3D,qCAAqCxB,eAAe,CAACwB,EAAE,EAAE;IAC7D,MAAMC,MAAM,GAAI,MAAM;IAEtB,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACU,GAAG,EAAE;QAChCE,MAAM;QACNC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAEhC,YAAY;UAAEiC,WAAW,EAAEvC;QAAiB,CAAC;MAC3E,CAAC,CAAC;MACF,IAAIoB,QAAQ,CAACoB,EAAE,EAAE;QACfrB,cAAc,CAACnB,gBAAgB,CAAC;QAChCyC,UAAU,CAAC,CAAC;MACd;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMkB,qBAAqB,GAAG,MAAOb,CAAC,IAAK;IACzCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,0CAA0CvB,eAAe,CAACwB,EAAE,EAAE;IAC1E,MAAMC,MAAM,GAAI,MAAM;IAEtB,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACU,GAAG,EAAE;QAChCE,MAAM;QACNC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,IAAI,EAAE5B,UAAU;UAAE6B,WAAW,EAAEvC,gBAAgB;UAAE2C,MAAM,EAAE/B;QAAa,CAAC;MAC/F,CAAC,CAAC;MACF,IAAIQ,QAAQ,CAACoB,EAAE,EAAE;QACfrB,cAAc,CAACnB,gBAAgB,CAAC;QAChCyC,UAAU,CAAC,CAAC;MACd;IACF,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAMoB,UAAU,GAAIC,QAAQ,IAAK;IAG/B5B,OAAO,CAAC,IAAI,CAAC;IACbR,kBAAkB,CAACoC,QAAQ,CAAC;IAC5BtC,eAAe,CAACsC,QAAQ,CAACC,aAAa,CAAC;IACvCC,sBAAsB,CAAC/C,gBAAgB,CAAC;IACxCK,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM2C,gBAAgB,GAAEA,CAACH,QAAQ,EAACI,MAAM,KAAK;IAC3ChC,OAAO,CAAC,KAAK,CAAC;IACdR,kBAAkB,CAACoC,QAAQ,CAAC;IAC5BlC,aAAa,CAACsC,MAAM,CAACX,IAAI,CAAC;IAC1BzB,eAAe,CAACoC,MAAM,CAACN,MAAM,CAAC;IAC9BtC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM6C,aAAa,GAAG,MAAOC,UAAU,IAAK;IAC1C,IAAI;MACF,MAAM9B,KAAK,CAAC,uCAAuC8B,UAAU,EAAE,EAAE;QAAElB,MAAM,EAAE;MAAS,CAAC,CAAC;MACtFd,cAAc,CAACnB,gBAAgB,CAAC;IAClC,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBpC,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,EAAE,CAAC;IACnBE,kBAAkB,CAAC,IAAI,CAAC;IACxBQ,OAAO,CAAC,IAAI,CAAC;IACbF,sBAAsB,CAAC,EAAE,CAAC;IAC1BJ,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEpB,OAAA;IAAA6D,QAAA,gBACE7D,OAAA;MAAA6D,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBjE,OAAA;MAAA6D,QAAA,EAAO;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACxBjE,OAAA;MAAQkE,KAAK,EAAEzD,gBAAiB;MAAC0D,QAAQ,EAAG7B,CAAC,IAAK5B,mBAAmB,CAAC4B,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;MAAAL,QAAA,gBACpF7D,OAAA;QAAQkE,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxC1D,UAAU,CAAC8D,GAAG,CAAEC,GAAG,iBAClBtE,OAAA;QAAqBkE,KAAK,EAAEI,GAAG,CAAC7B,EAAG;QAAAoB,QAAA,EAAES,GAAG,CAACC;MAAI,GAAhCD,GAAG,CAAC7B,EAAE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CACvD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAETjE,OAAA;MAAOwE,SAAS,EAAC,iBAAiB;MAAAX,QAAA,gBAC5B7D,OAAA;QAAA6D,QAAA,eACI7D,OAAA;UAAA6D,QAAA,gBACI7D,OAAA;YAAA6D,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBjE,OAAA;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjE,OAAA;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTjE,OAAA;YAAA6D,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRjE,OAAA;QAAA6D,QAAA,EACKlD,SAAS,CAAC0D,GAAG,CAAEf,QAAQ,iBACpBtD,OAAA,CAACL,KAAK,CAAC8E,QAAQ;UAAAZ,QAAA,gBACX7D,OAAA;YAAA6D,QAAA,gBACI7D,OAAA;cAAA6D,QAAA,eAAI7D,OAAA;gBAAA6D,QAAA,EAASP,QAAQ,CAACC;cAAa;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClDjE,OAAA;cAAA6D,QAAA,EAAI;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACVjE,OAAA;cAAA6D,QAAA,EAAI;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACVjE,OAAA;cAAA6D,QAAA,gBACI7D,OAAA;gBAAQ0E,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACC,QAAQ,CAAE;gBAACqB,QAAQ,EAAGrB,QAAQ,CAACsB,MAAM,KAAG,UAAU,IAAIxE,iBAAiB,KAAK,QAAS;gBAAAyD,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACrIjE,OAAA;gBAAQ0E,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAACL,QAAQ,CAACb,EAAE,CAAE;gBAACkC,QAAQ,EAAEvE,iBAAiB,KAAK,QAAS;gBAAAyD,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7G,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EACJX,QAAQ,CAACuB,OAAO,CAACR,GAAG,CAAEX,MAAM,iBACzB1D,OAAA;YAA2CwE,SAAS,EAAC,YAAY;YAAAX,QAAA,gBAC7D7D,OAAA;cAAA6D,QAAA,EAAKH,MAAM,CAACX;YAAI;cAAAe,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBjE,OAAA;cAAA6D,QAAA,GAAI,GAAC,EAACH,MAAM,CAACoB,KAAK;YAAA;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBjE,OAAA;cAAA6D,QAAA,eAGI7D,OAAA;gBACIwE,SAAS,EAAC,aAAa;gBACvBE,OAAO,EAAEA,CAAA,KAAMjB,gBAAgB,CAACH,QAAQ,EAACI,MAAM,CAAE;gBACjDiB,QAAQ,EAAGrB,QAAQ,CAACsB,MAAM,KAAG,UAAU,IAAIxE,iBAAiB,KAAK,QAAS;gBAC1E2E,KAAK,EAAE;kBAAEC,OAAO,EAAE1B,QAAQ,CAACsB,MAAM,KAAK,UAAU,GAAG,GAAG,GAAG,CAAC;kBAAEK,MAAM,EAAE3B,QAAQ,CAACsB,MAAM,KAAK,UAAU,GAAG,aAAa,GAAG;gBAAU,CAAE;gBAAAf,QAAA,eAEjI7D,OAAA;kBAAKkF,GAAG,EAAC,iBAAiB;kBAACC,GAAG,EAAC,MAAM;kBAACX,SAAS,EAAC;gBAAU;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA,GAdA,GAAGX,QAAQ,CAACb,EAAE,IAAIiB,MAAM,CAACoB,KAAK,EAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAerC,CACP,CAAC;QAAA,GA3BeX,QAAQ,CAACb,EAAE;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA4BhB,CACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGVjE,OAAA,CAACF,KAAK;MAACsF,MAAM,EAAEvE,WAAY;MAACwE,cAAc,EAAEnC,UAAW;MAACsB,SAAS,EAAC,eAAe;MAACc,gBAAgB,EAAC,eAAe;MAAAzB,QAAA,GAE/GpC,WAAW,iBACVzB,OAAA;QAAA6D,QAAA,gBACC7D,OAAA;UAAA6D,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBjE,OAAA;UAAMuF,QAAQ,EAAElD,uBAAwB;UAAAwB,QAAA,gBACrC7D,OAAA;YAAA6D,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAExBjE,OAAA;YAAUwF,IAAI,EAAC,GAAG;YAACC,IAAI,EAAC,IAAI;YAACvB,KAAK,EAAEnD,YAAa;YAACoD,QAAQ,EAAG7B,CAAC,IAAKtB,eAAe,CAACsB,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;YAACwB,QAAQ;YAAClB,SAAS,EAAC;UAAa;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACtIjE,OAAA;YAAA6D,QAAA,EAAO;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBjE,OAAA;YAAQkE,KAAK,EAAE3C,mBAAoB;YAAC4C,QAAQ,EAAG7B,CAAC,IAAKd,sBAAsB,CAACc,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;YAACM,SAAS,EAAC,aAAa;YAAAX,QAAA,gBAClH7D,OAAA;cAAQkE,KAAK,EAAC,EAAE;cAAAL,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxC1D,UAAU,CAAC8D,GAAG,CAAEC,GAAG,iBAClBtE,OAAA;cAAqBkE,KAAK,EAAEI,GAAG,CAAC7B,EAAG;cAAAoB,QAAA,EAAES,GAAG,CAACC;YAAI,GAAhCD,GAAG,CAAC7B,EAAE;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmC,CACvD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC,eACTjE,OAAA;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEPjE,OAAA;YAAA6D,QAAA,gBACE7D,OAAA;cAAQ2F,IAAI,EAAC,QAAQ;cAACjB,OAAO,EAAExB,UAAW;cAAAW,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1DjE,OAAA;cAAQ2F,IAAI,EAAC,QAAQ;cAAA9B,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR,EACA,CAACxC,WAAW,iBACXzB,OAAA;QAAA6D,QAAA,gBACC7D,OAAA;UAAA6D,QAAA,EAAI;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBjE,OAAA;UAAMuF,QAAQ,EAAEpC,qBAAsB;UAAAU,QAAA,gBACnC7D,OAAA;YAAA6D,QAAA,EAAO;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtBjE,OAAA;YAAUwF,IAAI,EAAC,GAAG;YAACC,IAAI,EAAC,IAAI;YAACvB,KAAK,EAAE/C,UAAW;YAACgD,QAAQ,EAAG7B,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;YAACwB,QAAQ;YAAClB,SAAS,EAAC;UAAa;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,KAAC,eAAAjE,OAAA;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxIjE,OAAA;YAAA6D,QAAA,gBACE7D,OAAA;cAAQ2F,IAAI,EAAC,QAAQ;cAACjB,OAAO,EAAExB,UAAW;cAAAW,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1DjE,OAAA;cAAQ2F,IAAI,EAAC,QAAQ;cAAA9B,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC9D,EAAA,CA/NID,cAAc;AAAA0F,EAAA,GAAd1F,cAAc;AAiOpB,eAAeA,cAAc;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}